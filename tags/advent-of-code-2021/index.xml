<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Advent of Code 2021 on Martin Musale</title>
    <link>https://musale.github.io/tags/advent-of-code-2021/</link>
    <description>Recent content in Advent of Code 2021 on Martin Musale</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2021 Martin Musale</copyright>
    <lastBuildDate>Wed, 01 Dec 2021 08:36:14 +0300</lastBuildDate><atom:link href="https://musale.github.io/tags/advent-of-code-2021/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Advent of Code 2021</title>
      <link>https://musale.github.io/thoughts/aoc21/</link>
      <pubDate>Wed, 01 Dec 2021 08:36:14 +0300</pubDate>
      
      <guid>https://musale.github.io/thoughts/aoc21/</guid>
      <description>Motivation I always like solving problems and this is a very nice place to practise my skills. This year, I would like to learn more concepts and I&amp;rsquo;m already liking this AOC. For starters, we have a lot of participation and people are streaming when they&amp;rsquo;re solving the puzzles. I like the way Jonathan Paulson&amp;rsquo;s videos are done. They are precise and really nice to see. He&amp;rsquo;s fast too and that makes me want to look and think through a puzzle with his level of understanding and speed.</description>
      <content>&lt;h1 id=&#34;motivation&#34;&gt;Motivation&lt;/h1&gt;
&lt;p&gt;I always like solving problems and this is a very nice place to practise my skills. This year, I would like to learn more concepts and I&amp;rsquo;m already liking this &lt;em&gt;AOC&lt;/em&gt;. For starters, we have a lot of participation and people are streaming when they&amp;rsquo;re solving the puzzles. I like the way &lt;a href=&#34;https://www.youtube.com/channel/UCuWLIm0l4sDpEe28t41WITA/videos&#34;&gt;Jonathan Paulson&amp;rsquo;s&lt;/a&gt; videos are done. They are precise and really nice to see. He&amp;rsquo;s fast too and that makes me want to look and think through a puzzle with his level of understanding and speed. I also like &lt;a href=&#34;https://www.twitch.tv/lizthegrey&#34;&gt;Liz Fong-Jones&#39;&lt;/a&gt; &lt;em&gt;Go&lt;/em&gt; solutions. My solutions are over &lt;a href=&#34;https://github.com/musale/advent-of-code-2021&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;day-2&#34;&gt;Day 2&lt;/h2&gt;
&lt;p&gt;The day two challenge was an easy one. What was required was to navigate the submarine using a series of commands. For each command, you manipulate the positions of the &lt;code&gt;horizontal&lt;/code&gt; and &lt;code&gt;depth&lt;/code&gt; values. I dilly-dallied on part one to get my go interfaces and receivers right. Part two only needs a slight tweak. However, I did not catch the point where I was not supposed to change the values for &lt;code&gt;down&lt;/code&gt; and &lt;code&gt;up&lt;/code&gt; commands however, I quickly rectified that and was good to go. So far, I like doing this in Go as it gives me an easier framework to compose my solutions.&lt;/p&gt;
&lt;p&gt;You can find my solution to this exercise in &lt;em&gt;golang&lt;/em&gt; &lt;a href=&#34;https://github.com/musale/advent-of-code-2021/blob/master/day_02/go/main.go&#34;&gt;here.&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;day-1&#34;&gt;Day 1&lt;/h2&gt;
&lt;p&gt;Pretty simple exercise. It involved getting the number of times values in an array increase. So given an array like &lt;code&gt;[1,2,3,2,4,1]&lt;/code&gt;, the increases are 3. In the first part, the task was to get the total number of increases going through the array. In the second part, the task was switched up to get the sum of increases in a sliding window of three values. So for &lt;code&gt;[1,2,3,2,4,1]&lt;/code&gt; the first window has &lt;code&gt;[1,2,3]&lt;/code&gt; and the next window has &lt;code&gt;[2,3,2]&lt;/code&gt;. If you sum that, then there is an increase and that&amp;rsquo;s the first one. You go on until the end of the array where the values in the window are less than three.&lt;/p&gt;
&lt;p&gt;You can find my solution to this exercise in &lt;em&gt;golang&lt;/em&gt; &lt;a href=&#34;https://github.com/musale/advent-of-code-2021/blob/master/day_01/go/main.go&#34;&gt;here.&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
